name: Install dependencies

description: Install default dependencies
inputs:
  exact-prod:
    default: false
    description: Install exact version for production dependencies
  latest:
    default: false
    description: Install latest version
  path:
    default: .
    description: Working directory

runs:
  using: composite
  steps:
    - id: prepare
      name: Prepare
      run: echo has-eslint=`if [ -f ./.eslintrc.react.yml ]; then echo true; else echo false; fi` >> $GITHUB_OUTPUT
      shell: bash
      working-directory: ${{ inputs.path }}

    - env:
        VERSION_TAG: ${{ inputs.latest == 'true' && '@latest' || '' }}
      name: Run npm install for production
      run: npm install --save botbuilder${{ env.VERSION_TAG }} dotenv${{ env.VERSION_TAG }} math-random${{ env.VERSION_TAG }} pretty-ms${{ env.VERSION_TAG }} restify${{ env.VERSION_TAG }}
      shell: bash
      working-directory: ${{ inputs.path }}

    - env:
        VERSION_TAG: ${{ inputs.latest == 'true' && '@latest' || '' }}
      name: Run npm install for development
      run: npm install --save-dev ${{ inputs.exact-prod == 'true' && '--save-exact' || '' }} eslint${{ env.VERSION_TAG }} eslint-config-standard${{ env.VERSION_TAG }} eslint-plugin-import${{ env.VERSION_TAG }} eslint-plugin-node${{ env.VERSION_TAG }} eslint-plugin-prettier${{ env.VERSION_TAG }} eslint-plugin-promise${{ env.VERSION_TAG }} eslint-plugin-standard${{ env.VERSION_TAG }} nodemon${{ env.VERSION_TAG }} prettier${{ env.VERSION_TAG }}
      shell: bash
      working-directory: ${{ inputs.path }}

    - continue-on-error: true
      name: Run npm audit fix
      run: npm audit fix
      shell: bash
      working-directory: ${{ inputs.path }}
